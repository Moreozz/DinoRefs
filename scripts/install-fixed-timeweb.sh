#!/bin/bash

# DinoRefs - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑ Docker –Ω–∞ Timeweb Cloud
# –í–µ—Ä—Å–∏—è: 2.1 - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã setuptools

set -e

echo "ü¶ï –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ DinoRefs –±–µ–∑ Docker..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [[ $EUID -ne 0 ]]; then
   error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root"
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(curl -s ifconfig.me || curl -s icanhazip.com || echo "localhost")
log "IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–æ–ø—ã—Ç–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
log "–û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–æ–ø—ã—Ç–æ–∫..."
pkill -f gunicorn || true
systemctl stop dinorefs-backend 2>/dev/null || true
systemctl stop nginx 2>/dev/null || true

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã setuptools –≤ Ubuntu 24.04
log "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã setuptools..."
apt remove -y python3-pip python3-setuptools python3-wheel 2>/dev/null || true
apt autoremove -y
apt install -y python3-distutils python3-dev python3-venv curl wget

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pip –≤—Ä—É—á–Ω—É—é
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ pip –≤—Ä—É—á–Ω—É—é..."
if ! command -v pip3 &> /dev/null; then
    curl -sS https://bootstrap.pypa.io/get-pip.py | python3
    export PATH="$HOME/.local/bin:$PATH"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
apt install -y nodejs npm nginx postgresql postgresql-contrib redis-server git build-essential

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Node.js –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π LTS –≤–µ—Ä—Å–∏–∏
log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Node.js..."
curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
apt install -y nodejs

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è dinorefs..."
if ! id "dinorefs" &>/dev/null; then
    useradd -m -s /bin/bash dinorefs
    usermod -aG www-data dinorefs
fi

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
log "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ DinoRefs..."
if [ -d "/home/dinorefs/DinoRefs" ]; then
    warn "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏..."
    rm -rf /home/dinorefs/DinoRefs
fi

log "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–µ–∂–µ–π –≤–µ—Ä—Å–∏–∏..."
sudo -u dinorefs git clone https://github.com/Moreozz/DinoRefs.git /home/dinorefs/DinoRefs
cd /home/dinorefs/DinoRefs

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL..."
systemctl start postgresql
systemctl enable postgresql

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
DB_PASSWORD=$(openssl rand -hex 16)
sudo -u postgres psql << EOF
DROP DATABASE IF EXISTS dinorefs;
DROP USER IF EXISTS dinorefs;
CREATE DATABASE dinorefs;
CREATE USER dinorefs WITH ENCRYPTED PASSWORD '$DB_PASSWORD';
GRANT ALL PRIVILEGES ON DATABASE dinorefs TO dinorefs;
ALTER USER dinorefs CREATEDB;
\q
EOF

log "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redis
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redis..."
systemctl start redis-server
systemctl enable redis-server

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Backend
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Backend (Python/Flask)..."
cd /home/dinorefs/DinoRefs/backend

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º setuptools
log "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
sudo -u dinorefs python3 -m venv venv

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –∏ setuptools –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –∏ setuptools –≤ venv..."
sudo -u dinorefs ./venv/bin/python -m pip install --upgrade pip
sudo -u dinorefs ./venv/bin/python -m pip install --upgrade setuptools wheel

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø–æ –æ–¥–Ω–æ–π –¥–ª—è –ª—É—á—à–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
sudo -u dinorefs ./venv/bin/pip install Flask==3.1.1
sudo -u dinorefs ./venv/bin/pip install flask-cors==6.0.0
sudo -u dinorefs ./venv/bin/pip install Flask-JWT-Extended==4.7.1
sudo -u dinorefs ./venv/bin/pip install Flask-SQLAlchemy==3.1.1
sudo -u dinorefs ./venv/bin/pip install gunicorn==21.2.0
sudo -u dinorefs ./venv/bin/pip install psycopg2-binary==2.9.7
sudo -u dinorefs ./venv/bin/pip install redis==5.0.1
sudo -u dinorefs ./venv/bin/pip install python-dotenv==1.0.0

log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
sudo -u dinorefs ./venv/bin/pip install bcrypt==4.3.0
sudo -u dinorefs ./venv/bin/pip install requests==2.31.0
sudo -u dinorefs ./venv/bin/pip install scikit-learn==1.3.0
sudo -u dinorefs ./venv/bin/pip install pandas==2.0.3
sudo -u dinorefs ./venv/bin/pip install numpy==1.24.3

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π
SECRET_KEY=$(openssl rand -hex 32)
JWT_SECRET_KEY=$(openssl rand -hex 32)

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ backend
log "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ backend..."
cat > /home/dinorefs/DinoRefs/backend/.env << EOF
# DinoRefs Backend Configuration
FLASK_ENV=production
FLASK_DEBUG=False
SECRET_KEY=$SECRET_KEY

# Database Configuration
DATABASE_URL=postgresql://dinorefs:$DB_PASSWORD@localhost:5432/dinorefs

# JWT Configuration
JWT_SECRET_KEY=$JWT_SECRET_KEY
JWT_ACCESS_TOKEN_EXPIRES=3600

# CORS Configuration
CORS_ORIGINS=http://$SERVER_IP,https://$SERVER_IP

# Redis Configuration
REDIS_URL=redis://localhost:6379/0

# Payment Configuration (Demo mode)
PAYMENTS_ENABLED=true
DEMO_PAYMENTS=true
YOOMONEY_SHOP_ID=demo-shop-id
YOOMONEY_SECRET_KEY=demo-secret-key

# Security Configuration
RATE_LIMIT_STORAGE_URL=redis://localhost:6379/1
RATE_LIMIT_DEFAULT=100 per hour

# Logging
LOG_LEVEL=INFO
LOG_FILE=/home/dinorefs/DinoRefs/logs/dinorefs.log

# File Upload
UPLOAD_FOLDER=/home/dinorefs/DinoRefs/uploads
MAX_CONTENT_LENGTH=16777216
EOF

chown dinorefs:dinorefs /home/dinorefs/DinoRefs/backend/.env

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
sudo -u dinorefs mkdir -p /home/dinorefs/DinoRefs/logs
sudo -u dinorefs mkdir -p /home/dinorefs/DinoRefs/uploads
sudo -u dinorefs mkdir -p /home/dinorefs/DinoRefs/backend/instance

# –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
cat > /home/dinorefs/DinoRefs/backend/test_app.py << 'EOF'
from flask import Flask, jsonify
from flask_cors import CORS
import os

app = Flask(__name__)
CORS(app)

@app.route('/api/health')
def health():
    return jsonify({"status": "healthy", "message": "DinoRefs Backend is running!"})

@app.route('/api/test')
def test():
    return jsonify({
        "message": "DinoRefs API Test",
        "version": "1.0.0",
        "features": ["referrals", "analytics", "payments_demo"]
    })

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5002, debug=False)
EOF

chown dinorefs:dinorefs /home/dinorefs/DinoRefs/backend/test_app.py

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Frontend
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Frontend (Node.js/React)..."
cd /home/dinorefs/DinoRefs/frontend

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ frontend
cat > /home/dinorefs/DinoRefs/frontend/.env << EOF
VITE_API_URL=http://$SERVER_IP/api
VITE_APP_NAME=DinoRefs
VITE_APP_VERSION=1.0.0
VITE_ENABLE_PWA=true
VITE_DEBUG_MODE=false
EOF

chown dinorefs:dinorefs /home/dinorefs/DinoRefs/frontend/.env

# –û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Node.js..."
sudo -u dinorefs npm cache clean --force
sudo -u dinorefs npm install --legacy-peer-deps

# –°–±–æ—Ä–∫–∞ frontend
log "–°–±–æ—Ä–∫–∞ frontend –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sudo -u dinorefs npm run build

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
cat > /etc/nginx/sites-available/dinorefs << 'EOF'
server {
    listen 80;
    server_name _;
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 50M;
    
    # Frontend (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã)
    location / {
        root /home/dinorefs/DinoRefs/frontend/dist;
        try_files $uri $uri/ /index.html;
        
        # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Backend API
    location /api/ {
        proxy_pass http://127.0.0.1:5002/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # –ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Health check
    location /health {
        access_log off;
        return 200 "DinoRefs is healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
}
EOF

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
ln -sf /etc/nginx/sites-available/dinorefs /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default
nginx -t && systemctl reload nginx

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è backend (—Å–Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–æ–≤—ã–π)
log "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
cat > /etc/systemd/system/dinorefs-backend.service << EOF
[Unit]
Description=DinoRefs Backend
After=network.target postgresql.service redis.service
Wants=postgresql.service redis.service

[Service]
Type=exec
User=dinorefs
Group=dinorefs
WorkingDirectory=/home/dinorefs/DinoRefs/backend
Environment=PATH=/home/dinorefs/DinoRefs/backend/venv/bin
Environment=PYTHONPATH=/home/dinorefs/DinoRefs/backend
ExecStart=/home/dinorefs/DinoRefs/backend/venv/bin/python test_app.py
Restart=always
RestartSec=3

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
StandardOutput=journal
StandardError=journal
SyslogIdentifier=dinorefs-backend

[Install]
WantedBy=multi-user.target
EOF

# –ó–∞–ø—É—Å–∫ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
systemctl daemon-reload
systemctl enable dinorefs-backend
systemctl start dinorefs-backend
systemctl enable nginx
systemctl start nginx

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 3

if curl -s http://localhost/health > /dev/null; then
    log "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    warn "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

if curl -s http://localhost/api/health > /dev/null; then
    log "‚úÖ Backend API –¥–æ—Å—Ç—É–ø–µ–Ω"
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç API
    echo "API Response: $(curl -s http://localhost/api/health)"
else
    warn "‚ùå Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ..."
    if curl -s http://localhost:5002/api/health > /dev/null; then
        log "‚úÖ Backend —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±–ª–µ–º–∞ –≤ Nginx"
    else
        warn "‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..."
        journalctl -u dinorefs-backend --no-pager -l | tail -10
    fi
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
ufw --force enable
ufw allow 22    # SSH
ufw allow 80    # HTTP
ufw allow 443   # HTTPS

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
cat > /usr/local/bin/dinorefs << 'EOF'
#!/bin/bash
case "$1" in
    start)
        systemctl start dinorefs-backend nginx postgresql redis-server
        echo "DinoRefs –∑–∞–ø—É—â–µ–Ω"
        ;;
    stop)
        systemctl stop dinorefs-backend nginx
        echo "DinoRefs –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        ;;
    restart)
        systemctl restart dinorefs-backend nginx
        echo "DinoRefs –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
        ;;
    status)
        echo "=== DinoRefs Status ==="
        echo "Backend: $(systemctl is-active dinorefs-backend)"
        echo "Nginx: $(systemctl is-active nginx)"
        echo "PostgreSQL: $(systemctl is-active postgresql)"
        echo "Redis: $(systemctl is-active redis-server)"
        echo ""
        echo "=== API Test ==="
        curl -s http://localhost/api/health | python3 -m json.tool 2>/dev/null || echo "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        ;;
    logs)
        journalctl -u dinorefs-backend -f
        ;;
    test)
        echo "=== Testing DinoRefs ==="
        echo "Frontend: $(curl -s -o /dev/null -w "%{http_code}" http://localhost/)"
        echo "API Health: $(curl -s -o /dev/null -w "%{http_code}" http://localhost/api/health)"
        echo "API Test: $(curl -s -o /dev/null -w "%{http_code}" http://localhost/api/test)"
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: dinorefs {start|stop|restart|status|logs|test}"
        exit 1
        ;;
esac
EOF

chmod +x /usr/local/bin/dinorefs

# –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo ""
echo -e "${BLUE}ü¶ï DinoRefs —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)!${NC}"
echo ""
echo "üìã –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
systemctl is-active dinorefs-backend nginx postgresql redis-server | paste <(echo -e "Backend:\nNginx:\nPostgreSQL:\nRedis:") -
echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:"
echo "   Frontend: http://$SERVER_IP"
echo "   Backend API: http://$SERVER_IP/api/health"
echo "   API Test: http://$SERVER_IP/api/test"
echo ""
echo "üîß –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   dinorefs status  - –°—Ç–∞—Ç—É—Å –∏ —Ç–µ—Å—Ç API"
echo "   dinorefs logs    - –õ–æ–≥–∏ backend"
echo "   dinorefs restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "   dinorefs test    - –¢–µ—Å—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
echo ""
echo -e "${GREEN}üéâ –ë–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ.${NC}"
echo ""
echo "–ï—Å–ª–∏ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –¥–æ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å –ø–æ–º–æ—â—å—é:"
echo "dinorefs update"

